{"version":3,"sources":["components/App.js","index.js"],"names":["App","inputRef","ipfs","require","ipfsClient","host","port","protocol","_useState","useState","_useState2","Object","C_Users_Jacky_Desktop_CS_projects_ipfs_file_uploader_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","initialUpload","setInitialUpload","_useState3","_useState4","fileUploaded","setFileUploaded","_useState5","_useState6","fileBuffer","setFileBuffer","_useState7","_useState8","uploadedToIPFS","setUploadedToIPFS","_useState9","_useState10","ipfsURI","setIpfsURI","_useState11","_useState12","open","setOpen","closeDialog","console","log","useEffect","add","err","res","error","hash","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","className","class","type","hidden","ref","refParam","onChange","event","preventDefault","target","files","file","reader","window","FileReader","readAsArrayBuffer","onloadend","Buffer","result","onClick","click","rel","href","_material_ui_core_Dialog__WEBPACK_IMPORTED_MODULE_4__","onClose","aria-labelledby","aria-describedby","_material_ui_core_DialogTitle__WEBPACK_IMPORTED_MODULE_6__","id","_material_ui_core_DialogActions__WEBPACK_IMPORTED_MODULE_5__","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_3__","color","autoFocus","__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_dom__WEBPACK_IMPORTED_MODULE_1__","react_dom__WEBPACK_IMPORTED_MODULE_1___default","_components_App__WEBPACK_IMPORTED_MODULE_3__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5afd8cfe.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport './App.css';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\n//import DialogContent from '@material-ui/core/DialogContent';\r\n//import DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\n\r\nfunction App() {\r\n\r\n  //ipfs instance\r\n  const ipfsClient = require('ipfs-http-client')\r\n\r\n  const ipfs = ipfsClient({\r\n    host: 'ipfs.infura.io',\r\n    port: 5001,\r\n    protocol: 'https'\r\n  })\r\n\r\n  //file input ref\r\n  let inputRef;\r\n\r\n  //states\r\n  const [initialUpload, setInitialUpload] = useState(false)\r\n  const [fileUploaded, setFileUploaded] = useState(false)\r\n  const [fileBuffer, setFileBuffer] = useState(null)\r\n  const [uploadedToIPFS, setUploadedToIPFS] = useState(false)\r\n  const [ipfsURI, setIpfsURI] = useState('undefined')\r\n\r\n  const [open, setOpen] = useState(false)\r\n\r\n  //reset state\r\n  const resetState = () =>{\r\n    console.log('resetting state...')\r\n    setFileUploaded(false)\r\n    setUploadedToIPFS(false)\r\n    setFileBuffer(null)\r\n  }\r\n\r\n  //handle dialog actions\r\n  const openDialog = () => {\r\n    setOpen(true)\r\n  }\r\n\r\n  const closeDialog = () => {\r\n    setOpen(false)\r\n    resetState()\r\n  }\r\n  \r\n  //\"Upload\" button click event\r\n  const uploadFile = (event) =>{\r\n    event.preventDefault()\r\n    setFileUploaded(true)\r\n\r\n    console.log('onChange: File is captured')\r\n    console.log(event.target.files[0])\r\n\r\n    //process uploaded file\r\n    const file = event.target.files[0]\r\n    const reader = new window.FileReader()\r\n\r\n    reader.readAsArrayBuffer(file)\r\n\r\n    reader.onloadend = () =>{\r\n      setFileBuffer(Buffer(reader.result))\r\n    }\r\n\r\n  }\r\n\r\n  //add file to IPFS\r\n  const addToIPFS = () =>{\r\n    console.log(\"Adding the file to IPFS...\")\r\n    ipfs.add(fileBuffer, (err, res) => {\r\n      if(err) console.error(\"Error: \", err)\r\n\r\n      console.log('IPFS result: ', res)\r\n      const hash = res[0].hash\r\n      setIpfsURI('https://ipfs.infura.io/ipfs/' + hash)\r\n      setInitialUpload(true)\r\n      setUploadedToIPFS(true)\r\n    })\r\n  }\r\n\r\n    //callback function when value changed\r\n    useEffect(()=>{\r\n      console.log('fileUploaded status: ', fileUploaded)\r\n    }, [fileUploaded])\r\n  \r\n    useEffect(()=>{\r\n      console.log('File Buffer: ', fileBuffer)\r\n      if(fileUploaded){\r\n        //open \"File Upload\" information box, after user uploaded file\r\n        openDialog()\r\n        addToIPFS()\r\n      }\r\n    }, [fileBuffer])\r\n  \r\n    useEffect(() => {\r\n      console.log('uploadedToIPFS status: ', fileUploaded)\r\n    }, [uploadedToIPFS])\r\n\r\n    useEffect(() => {\r\n      console.log('ipfs URI: ', ipfsURI)\r\n    }, [ipfsURI])\r\n\r\n  return (\r\n    <div className='App'>\r\n\r\n      {/* Title */}\r\n\r\n      <h1 className='header'>IPFS File Uploader</h1>\r\n\r\n      {/* Content */}\r\n\r\n      <h3 className='content'>\r\n        <i class=\"fa-solid fa-angle-right\"/>\r\n        <i className='content-link'>{initialUpload ? ipfsURI : \"Your url will be available here\"}</i>\r\n      </h3>\r\n\r\n      {/* File upload Button */}\r\n\r\n      <input\r\n        type=\"file\"\r\n        hidden={true}\r\n        ref={refParam => inputRef = refParam}\r\n        onChange={uploadFile}\r\n      />\r\n\r\n        <button \r\n          className='btn btn--primary btn--medium '\r\n          onClick={() => inputRef.click()}\r\n        >\r\n          UPLOAD\r\n        </button>\r\n\r\n        <div className='github-icon'>\r\n              {/* GitHub, Source Code Link*/}\r\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/jacc-cyc/ipfs-uploader\" className=\"source-code\">\r\n              <i class=\"fa-brands fa-github\" /></a>\r\n        </div>\r\n\r\n        {/* \"File Uploaded Successfully\" Information Box */}\r\n          \r\n        <Dialog\r\n            open={open}\r\n            onClose={closeDialog}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n          >\r\n          \r\n          {uploadedToIPFS ?\r\n          <DialogTitle id=\"alert-dialog-title\">{\"Done! URL is available now.\"}</DialogTitle>\r\n           :\r\n           <DialogTitle id=\"alert-dialog-title\">{\"Uploading your file to IPFS...\"}</DialogTitle>}\r\n\r\n          { uploadedToIPFS ? \r\n          <DialogActions>\r\n            <Button onClick={closeDialog} color=\"primary\" autoFocus>\r\n              Ok\r\n            </Button>\r\n          </DialogActions> : \r\n\r\n          <DialogActions>\r\n            \r\n          </DialogActions>}\r\n\r\n        </Dialog>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n    <App />,  \r\n    document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}